// RobotBuilder Version: 1.5
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc1992.MyRobot.subsystems;

import org.usfirst.frc1992.MyRobot.RobotMap;
import org.usfirst.frc1992.MyRobot.commands.*;
import edu.wpi.first.wpilibj.*;

import edu.wpi.first.wpilibj.command.Subsystem;


/**
 *
 */
public class DriveTrain extends Subsystem {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    SpeedController leftMotor = RobotMap.driveTrainLeftMotor;
    SpeedController rightMotor = RobotMap.driveTrainRightMotor;
    RobotDrive robotDrive2 = RobotMap.driveTrainRobotDrive2;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    
    // Put methods for controlling this subsystem
    // here. Call these from Commands.

    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
        setDefaultCommand(new DriveWithRCJoystic());

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
	
        // Set the default command for a subsystem here.
        //setDefaultCommand(new MySpecialCommand());
    }
    
   // public void takeJoystickInputs(Joystick left, Joystick right) {
   // 	robotDrive2.tankDrive(left, right);
    //}
    
    public void driveRobot(double left, double right) {
    	robotDrive2.tankDrive(left, right);
    }
    
    public void driveRobotWithRCJoy(Joystick joy) {
    	double moveValue;
    	double rotateValue;
    	double throttleValue;
    	
    	//This uses the right joystick on the RC controller to drive the robot
    	robotDrive2.arcadeDrive(joy, false);
    	
    	//This uses the Right joystick on the RC controller.  It also attempts to use the left stick (Throttle) to increase/decrease the overall speed - not quite working yet.
    	//throttleValue = (1 - joy.getRawAxis(2)) / 2 ;
    	//moveValue = (joy.getRawAxis(1)/2) + throttleValue;
    	//rotateValue = joy.getRawAxis(0);
    	//robotDrive2.arcadeDrive(moveValue, rotateValue, true);
    	
    	Timer.delay(0.005);
    }
    
    
    public void stop () {
    	robotDrive2.drive(0, 0);
    }
}

